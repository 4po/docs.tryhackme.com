(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{150:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return p}));var n=r(1),o=r(9),a=(r(0),r(173)),s={id:"api-endpoints",title:"API Endpoints",sidebar_label:"API Endpoints"},c={id:"api-docs/api-endpoints",title:"API Endpoints",description:"## Authentication/Registering Users",source:"@site/docs/api-docs/api-endpoints.md",permalink:"/docs/api-docs/api-endpoints",editUrl:"https://github.com/tryhackmeltd/docs.tryhackme.com/edit/master/docs/api-docs/api-endpoints.md",lastUpdatedBy:"ashu-savani",lastUpdatedAt:1588631720,sidebar_label:"API Endpoints",sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/api-docs/introduction"}},i=[{value:"Authentication/Registering Users",id:"authenticationregistering-users",children:[]},{value:"Retrieve User Progress",id:"retrieve-user-progress",children:[]},{value:"Retrieving Users",id:"retrieving-users",children:[]},{value:"Remove Users From Room",id:"remove-users-from-room",children:[]},{value:"Retrieve Public Rooms",id:"retrieve-public-rooms",children:[]},{value:"Check If Room Exists",id:"check-if-room-exists",children:[]},{value:"Status Codes &amp; Error Handling",id:"status-codes--error-handling",children:[]}],l={rightToc:i};function p(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"authenticationregistering-users"},"Authentication/Registering Users"),Object(a.b)("p",null,"When you want a  user wants to launch into a TryHackMe room, you will send a POST request to the URL below. The apiKey parameter is the API key required to authenticate the request. The userId parameter is a unique string used to represent your user and the roomCode is the code of the room that the user is trying to access. A successful request will return a 200 status code with a URL:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"If the user has not authenticated to TryHackMe through this API endpoint, the URL will point to a unique sign up page that redirects a user to a room after successful registration"),Object(a.b)("li",{parentName:"ul"},"If that user has authenticated to TryHackMe through this API endpoint, the URL will automatically enter a user into a room")),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"POST https://tryhackme.com/external/api/authenticate\n")),Object(a.b)("p",null,"The request body parameters are"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"{\n    apiKey: String,\n    userId: String,\n    roomCode: String\n}\n")),Object(a.b)("p",null,"The headers & data encoding are"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"Content-Type: application/x-www-form-urlencoded\n")),Object(a.b)("p",null,"The expected successful response is"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"{\n     url: String\n}\n")),Object(a.b)("h2",{id:"retrieve-user-progress"},"Retrieve User Progress"),Object(a.b)("p",null,"This endpoint returns users progress in the specified room. The {ROOM-CODE} parameter is the room code you would like to receive data from."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"GET https://tryhackme.com/external/api/getgraphdata/{ROOM-CODE}\n")),Object(a.b)("p",null,"The API key needs to be provided inside the THM-API-KEY header as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"THM-API-KEY: {API-KEY}\n")),Object(a.b)("p",null,"The expected successful response is"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'[\n  {\n    "name": "String",\n    "data": [\n      "",\n      0\n    ],\n    "taskData": [\n      {\n        "taskNo": Integer,\n        "questionNo": Integer,\n        "correct": Boolean,\n        "score": Integer,\n        "timeCorrect": "ISO8601 UTC Timestamp"\n      },\n    ],\n    "totalScore": Integer,\n    "rankNo": Integer,\n    "avatar": String,\n    "level": Integer\n  }\n]\n')),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Data will only show for users that are in the room, and that have been created through the ",Object(a.b)("inlineCode",{parentName:"strong"},"/api/external/authenticate")," endpoint. If you've generated a user through this endpoint, they'll also need to sign up and join the room.")),Object(a.b)("h2",{id:"retrieving-users"},"Retrieving Users"),Object(a.b)("p",null,"This endpoint is used to retrieve all the users that have signed up using the API."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"GET https://tryhackme.com/external/api/users\n")),Object(a.b)("p",null,"The API key needs to be provided inside the THM-API-KEY header as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"THM-API-KEY: {API-KEY}\n")),Object(a.b)("p",null,"The expected successful response is as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "status": true,\n    "users": [\n        {\n            "username": String,\n            "email": String,\n            "dateSignedUp": ISO8601 UTC Datetime\n        }\n    ]\n}\n')),Object(a.b)("h2",{id:"remove-users-from-room"},"Remove Users From Room"),Object(a.b)("p",null,"This endpoint is used to remove a user from a room."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"POST https://tryhackme.com/external/api/leaveRoom\n")),Object(a.b)("p",null,"The request body parameters are"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"{\n    apiKey: String,\n    userId: String,\n    roomCode: String\n}\n")),Object(a.b)("p",null,"The headers & data encoding are"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"Content-Type: application/x-www-form-urlencoded\n")),Object(a.b)("p",null,"The expected successful response is as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"{}\n")),Object(a.b)("h2",{id:"retrieve-public-rooms"},"Retrieve Public Rooms"),Object(a.b)("p",null,"This endpoint is used to retrieve details of public rooms on the platform."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"GET https://tryhackme.com/external/api/rooms\n")),Object(a.b)("p",null,"The API key needs to be provided inside the THM-API-KEY header as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"THM-API-KEY: {API-KEY}\n")),Object(a.b)("p",null,"The expected successful response is as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'[\n    {\n        "code": String,\n        "title": String,\n        "description": String\n    },\n]\n')),Object(a.b)("h2",{id:"check-if-room-exists"},"Check If Room Exists"),Object(a.b)("p",null,"This endpoint is used to check if a room exists on the platform using the {ROOM-CODE} as a URL parameter.."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"GET https://tryhackme.com/external/api/roomExists/{ROOM-CODE}\n")),Object(a.b)("p",null,"The API key needs to be provided inside the THM-API-KEY header as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),"THM-API-KEY: {API-KEY}\n")),Object(a.b)("p",null,"The expected successful response is as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    "roomExists": Boolean\n}\n')),Object(a.b)("h2",{id:"status-codes--error-handling"},"Status Codes & Error Handling"),Object(a.b)("p",null,"A successful request to any of these endpoints will always return a 200 OK response."),Object(a.b)("p",null,"A request to an endpoint that does not return a 200 OK response will contain a message parameter attached to the response as follows"),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{}),'{\n    message: "API Key is invalid or has expired."\n}\n')))}p.isMDXComponent=!0},173:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return O}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c({},t,{},e)),r},u=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,O=u["".concat(s,".").concat(d)]||u[d]||b[d]||a;return r?o.a.createElement(O,c({ref:t},l,{components:r})):o.a.createElement(O,c({ref:t},l))}));function O(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);